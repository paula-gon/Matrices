#include <iostream>
#include <stdio.h>
#include <cmath>
#define MAX 100

void mostrar_matriz(int matriz[][MAX], int orden);
int determinante(int matriz[][MAX], int orden);
int cofactor(int matriz[][MAX], int orden, int fila, int columna);

using namespace std;

int matriz[6][6],num,i,j;

int main() {
  int OP;
  printf("\t\t\tMENÚ DE MATRICES\n\n\n");
  printf("1.TRANSPUESTA \n\n2.DETERMINANTE \n");
  printf("\n\n\nDIGITA TU OPCION: ");
  scanf("%d",&OP);
  
  switch(OP){
    case 1: system("clear");
    while(num<3 || num>6){ //verificacion de datos
    printf("\n\nCuál es el tamaño de la matriz cuadrada? ");
    scanf("%d",&num);
      if(num<3 || num>6)
        printf("ERROR!!! ES DE 3 A 6\n\n");
      }
    printf("\n");
  
  //ingreso de los numeros de la matriz
  for(i=0;i<num;i++) {
    for (j=0;j<num;j++){
    printf("Digite el número de la matriz: ");
    scanf("%d",&matriz[i][j]);
     }
  }
  //impresiòn de la matriz que se ingresò
  printf("\nLA MATRIZ INGRESADA ES: \n");
  for(i=0;i<num;i++) {
    for (j=0;j<num;j++){
    printf(" %d ",matriz[i][j]);
     }
    printf("\n");
  }

  printf("\nLA MATRIZ TRANSPUESTA ES: \n");
  for(i=0;i<num;i++) {
    for (j=0;j<num;j++){
    printf(" %d ",matriz[j][i]); //solo se cambia se lugar j i
     }
    printf("\n"); //para que salga ordenada la matriz
  }
            break;
    case 2: system("clear");
      int matriz[MAX][MAX];
   int orden;

   cout << "Ingresa el orden de la matriz (maximo " << MAX << "): ";
   cin >> orden;
        
   while (orden < 3 || orden > MAX) {
      cout << "\nEl orden de la matriz es entre 3 y " << MAX << endl;
      cout << "Ingrese nuevamente el orden de la matriz: ";
      cin >> orden;
   }
   
   cout << "\nIngrese los elementos de la matriz:\n\n";
   for (int i = 0; i < orden; i++) {
      for (int j = 0; j < orden; j++) {
         cin >> matriz[i][j];
      }
   }

   cout << "\nMostrando la matriz ingresada:\n";
   mostrar_matriz(matriz, orden);
   
   cout << "\nEl determinante es: " << determinante(matriz, orden) << endl;

   cin.get();
   cin.get();
   return 0;
           break;
     default:printf("\n\nOPCION INCORRECTA");
      }
  }

void mostrar_matriz(int matriz[][MAX], int orden)
{
   cout << "Orden: " << orden << endl;
   for (int i = 0; i < orden; i++) {
      for (int j = 0; j < orden; j++) {
         cout << "\t" << matriz[i][j];
      }
      cout << "\n";
   }
}


int determinante(int matriz[][MAX], int orden)
{
   int det = 0.0;
   
   if (orden == 1) {
      det = matriz[0][0];
   } else {
      for (int j = 0; j < orden; j++) {
         det = det + matriz[0][j] * cofactor(matriz, orden, 0, j);
      }
   }
   
   return det;
}


int cofactor(int matriz[][MAX], int orden, int fila, int columna)
{
   int submatriz[MAX][MAX];
   int n = orden - 1;
   
   int x = 0;
   int y = 0;
   for (int i = 0; i < orden; i++) {
      for (int j = 0; j < orden; j++) {
         if (i != fila && j != columna) {
            submatriz[x][y] = matriz[i][j];
            y++;
            if (y >= n) {
               x++;
               y = 0;
            }
         }
      }
   }
   
   return pow(-1.0, fila + columna) * determinante(submatriz, n);
}
